// Automatic FlutterFlow imports
import '/backend/supabase/supabase.dart';
import '/flutter_flow/flutter_flow_theme.dart';
import '/flutter_flow/flutter_flow_util.dart';
import '/custom_code/actions/index.dart'; // Imports other custom actions
import '/flutter_flow/custom_functions.dart'; // Imports custom functions
import 'package:flutter/material.dart';
// Begin custom action code
// DO NOT REMOVE OR MODIFY THE CODE ABOVE!

import 'dart:convert' as convert;
import 'package:http/http.dart' as http;

/// Fetches a list of all countries from the countriesnow.space API.
///
/// Returns a List of dynamic objects, or null if the request fails.
Future<List<dynamic>?> httpGetAllCountriesAction() async {
  // Define the base URL and the specific path for the countries API.
  // The API endpoint for countries with ISO codes is usually '/api/v0.1/countries/iso'.
  // Ensure the host is 'countriesnow.space' and the path is correct.
  var url = Uri.https('countriesnow.space', '/api/v0.1/countries/iso');

  try {
    // Make the HTTP GET request to the specified URL.
    var response = await http.get(url);

    // Check if the HTTP request was successful (status code 200).
    if (response.statusCode == 200) {
      // Decode the JSON string body into a Dart Map (dynamic because structure can vary).
      Map<String, dynamic> jsonResponse = convert.jsonDecode(response.body);

      // The countriesnow.space API typically returns the actual list of countries
      // under a 'data' key in the JSON response.
      // We check if the 'data' key exists and if it's a List.
      if (jsonResponse.containsKey('data') && jsonResponse['data'] is List) {
        // Return the list found under the 'data' key.
        return jsonResponse['data'] as List<dynamic>;
      } else {
        // If 'data' key is missing or not a List, log a warning.
        print(
            'API response structure unexpected: missing "data" key or not a list.');
        return null; // Return null as we couldn't get the expected list.
      }
    } else {
      // If the request was not successful, print the status code and reason.
      print(
          'Request failed with status: ${response.statusCode}. Reason: ${response.reasonPhrase}');
      return null; // Return null on HTTP error.
    }
  } catch (e) {
    // Catch any exceptions during the HTTP request or JSON parsing.
    print('An error occurred while fetching countries: $e');
    return null; // Return null on exception.
  }
}
